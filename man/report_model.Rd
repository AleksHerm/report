% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_intercept.R, R/report_model.R,
%   R/report_model_regression.R, R/report_parameters.R, R/report_performance.R
\name{report_intercept}
\alias{report_intercept}
\alias{report_model}
\alias{report_model.glm}
\alias{report_parameters}
\alias{report_performance}
\title{Model description}
\usage{
report_intercept(model, parameters, ...)

report_model(model, ...)

\method{report_model}{glm}(
  model,
  parameters = NULL,
  ci = NULL,
  ci_method = NULL,
  standardize = "refit",
  standardize_robust = FALSE,
  interpretation = NULL,
  bootstrap = FALSE,
  iterations = 500,
  test = NULL,
  rope_range = NULL,
  rope_ci = NULL,
  df_method = NULL,
  ...
)

report_parameters(model, parameters, prefix = "  - ", ...)

report_performance(model, performance = NULL, ...)
}
\arguments{
\item{model}{Object.}

\item{parameters}{A parameters table obtained via \code{parameters::model_parameters()}.}

\item{...}{Arguments passed to or from other methods.}

\item{ci}{Confidence Interval (CI) level. Default to 0.95 (95\%).}

\item{ci_method}{The type of index used for Credible Interval. Can be
\code{"HDI"} (default, see \code{\link[bayestestR:hdi]{hdi}}), \code{"ETI"}
(see \code{\link[bayestestR:eti]{eti}}) or \code{"SI"}
(see \code{\link[bayestestR:si]{si}}).}

\item{standardize}{The method used for standardizing the parameters. Can be \code{"refit"}, \code{"posthoc"}, \code{"smart"}, \code{"basic"} or \code{NULL} (default) for no standardization. See 'Details' in \code{\link[effectsize]{standardize_parameters}}. Note that robust estimation (i.e. \code{robust=TRUE}) of standardized parameters only works when \code{standardize="refit"}.}

\item{standardize_robust}{Logical, if \code{TRUE}, robust standard errors are calculated (if possible), and confidence intervals and p-values are based on these robust standard errors.}

\item{interpretation}{\href{https://easystats.github.io/effectsize/articles/interpret.html}{Interpret the standardized parameters} using a set of rules. Default corresponds to "funder2019" for linear models and "chen2010" for logistic models.}

\item{bootstrap}{Should estimates be based on bootstrapped model? If \code{TRUE}, then arguments of \link[parameters:model_parameters.stanreg]{Bayesian regressions} apply (see also \code{\link[parameters:bootstrap_parameters]{bootstrap_parameters()}}).}

\item{iterations}{The number of bootstrap replicates. This only apply in the case of bootstrapped frequentist models.}

\item{test}{The indices of effect existence to compute. Character (vector) or
list with one or more of these options: \code{"p_direction"} (or \code{"pd"}),
\code{"rope"}, \code{"p_map"}, \code{"equivalence_test"} (or \code{"equitest"}),
\code{"bayesfactor"} (or \code{"bf"}) or \code{"all"} to compute all tests.
For each "test", the corresponding \pkg{bayestestR} function is called
(e.g. \code{\link[bayestestR:rope]{rope}} or \code{\link[bayestestR:p_direction]{p_direction}}) and its results
included in the summary output.}

\item{rope_range}{ROPE's lower and higher bounds. Should be a list of two
values (e.g., \code{c(-0.1, 0.1)}) or \code{"default"}. If \code{"default"},
the bounds are set to \code{x +- 0.1*SD(response)}.}

\item{rope_ci}{The Credible Interval (CI) probability, corresponding to the
proportion of HDI, to use for the percentage in ROPE.}

\item{df_method}{Method for computing degrees of freedom for p values, standard errors and confidence intervals (CI). May be \code{"wald"} (default, see \code{\link[parameters]{degrees_of_freedom}}), \code{"ml1"} (see \code{\link[parameters]{dof_ml1}}), \code{"betwithin"} (see \code{\link[parameters]{dof_betwithin}}), \code{"satterthwaite"} (see \code{\link[parameters]{dof_satterthwaite}}) or \code{"kenward"} (see \code{\link[parameters]{dof_kenward}}). Note that when \code{df_method} is not \code{"wald"}, robust standard errors etc. cannot be computed.}

\item{prefix}{Prefix character that appears in front of each line.}

\item{performance}{A performance table obtained via \code{performance::model_performance()}.}
}
\description{
Model textual description.
}
\examples{
model <- lm(Sepal.Length ~ Species, data = iris)
report_intercept(model)

library(lme4)
model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)
report_intercept(model)
model <- lm(Sepal.Length ~ Species, data = iris)
report_model(model)

library(lme4)
model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)
report_model(model)
model <- lm(Sepal.Length ~ Species, data = iris)
report_parameters(model)

library(lme4)
model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)
report_parameters(model)
model <- lm(Sepal.Length ~ Species, data = iris)
report_performance(model)

library(lme4)
model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)
report_performance(model)
}
\seealso{
report
}
