n_characters = 4
levels_percentage = TRUE
missing_percentage = FALSE
# Table -------------------------------------------------------------------
n_char <- sort(table(x), decreasing=TRUE)
x <- c("A", "B", "C", "A", "B", "B", "D")
# Table -------------------------------------------------------------------
n_char <- sort(table(x), decreasing=TRUE)
perc_char <- n_char/length(x)
perc_char
paste(n_char)
# Table -------------------------------------------------------------------
n_char <- sort(table(x), decreasing=TRUE)
paste(n_char)
paste(n_char, collapse="")
unlist(n_char)
n_char
as.data.frame(n_char)
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
n_char$perc <- n_char$x / length(x)
n_char
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
n_char$perc <- n_char$x / length(x)
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
n_char$x
n_char$perc <- n_char$Freq / length(x)
n_char
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE)) %>%
rename("n" = "Freq")
library(dplyr)
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE)) %>%
rename("n" = "Freq")
n_char
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE)) %>%
rename("n" = "Freq",
1 = "Entry")
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE)) %>%
rename("n" = "Freq",
"1" = "Entry")
names(n_char) <- c("Entry", "n")
n_char
# Table -------------------------------------------------------------------
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
names(n_char) <- c("Entry", "n_Entry")
n_char$perc_Entry <- n_char$n / length(x)
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
names(n_char) <- c("Entry", "n_Entry")
n_char$perc_Entry <- n_char$n_Entry / length(x)
n_char
x <- c("A", "B", "C", "A", "B", "B", "D", "E", "A")
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
names(n_char) <- c("Entry", "n_Entry")
n_char$perc_Entry <- n_char$n_Entry / length(x)
n_char
x <- c("A", "B", "C", "A", "B", "B", "D", "E", "B", "D")
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
names(n_char) <- c("Entry", "n_Entry")
n_char$perc_Entry <- n_char$n_Entry / length(x)
n_char
x <- c("A", "B", "C", "A", "B", "B", "D", "E", "B", "D", "A")
n_char <- as.data.frame(sort(table(x), decreasing=TRUE))
names(n_char) <- c("Entry", "n_Entry")
n_char$perc_Entry <- n_char$n_Entry / length(x)
n_char
table_full <- data.frame(
n_Obs = length(x),
n_Missing = sum(is.na(x))
)
table_full$perc_Missing <- table_full$n_Missing / table_full$n_Obs
library(report)
format_text_collapse(c("A", "B", "C"))
testthat::expect_equal(format_text_collapse(c("A", "B", "C")), "A, B and C", tol = 0)
x <- paste(rep("a very long string", 50), collapse=" ")
x <- paste(rep("a very long string", 50), collapse=" \n")
nchar(format_text_wrap(x, width=50))
testthat::expect_equal(nchar(format_text_wrap(x, width=50)), 999, tol = 0)
format_text_wrap(x, width=50)
x
nchar(x)
x <- paste(rep("a very long string", 50), collapse=" \n")
nchar(format_text_wrap(x, width=25))
interpret_d(0.021)
interpret_d(0.6)
interpret_d(c(0.45, 0.85))
interpret_d(0.45)
interpret_d(0.55)
interpret_d(1.3, rules="sawilowsky2009")
interpret_d(0.6, rules=rules(c(0.5, "A", "B"))
)
interpret_d(0.6, rules=rules(c(0.5), c("A", "B")))
rules(c(0.5), c("A", "B"))
rules=rules(c(0.5), c("A", "B"))
is.rules(rules)
d <- 0/6
d <- 0.5
interpret(abs(d), rules)
