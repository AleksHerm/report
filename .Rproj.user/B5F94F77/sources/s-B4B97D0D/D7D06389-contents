---
title: "report"
output: 
  github_document:
    toc: true
    fig_width: 10.08
    fig_height: 6
  rmarkdown::html_vignette:
    toc: true
    fig_width: 10.08
    fig_height: 6
tags: [r, report]
vignette: >
  \usepackage[utf8]{inputenc}
editor_options: 
  chunk_output_type: console
---


## Installation


Run the following:

```{r eval=FALSE, message=FALSE, warning=FALSE, eval=FALSE}
install.packages("devtools")
devtools::install_github("neuropsychology/report")
```
```{r message=FALSE, warning=FALSE}
library("report")
```


## General Workflow

The `report` package works in a two steps fashion. First, creating a `report` object with the `report()` function (which takes different arguments depending on the type of object you are reporting). Then, this report can be displayed either textually, using `to_text()`, or as a table, using `to_table()`. Moreover, you can also access a more detailed (but less digest) version of the report using `to_fulltext()` and `to_fulltable()`. Finally, the `values()` makes it easy to access all the internals of a model. 



## Examples


### Dataframes

```{r message=FALSE, warning=FALSE}
report(iris)
```

```{r message=FALSE, warning=FALSE, eval=FALSE}
to_table(report(iris, median = TRUE))
```
```{r echo=FALSE, message=FALSE, warning=FALSE}
knitr::kable(to_table(report(iris, median = TRUE)))
```

### Correlations and t-tests

```{r message=FALSE, warning=FALSE}
report(cor.test(iris$Sepal.Length, iris$Petal.Length))
```

```{r message=FALSE, warning=FALSE}
report(t.test(iris$Sepal.Length, iris$Petal.Length))
```


### Linear Models (LM)

The difference between regular and full versions of reports becomes obvious for more complicated models.

```{r message=FALSE, warning=FALSE}
model <- lm(Sepal.Length ~ Petal.Length + Species, data=iris)
r <- report(model)

to_text(r)
```
```{r message=FALSE, warning=FALSE}
to_fulltext(r)
```
```{r message=FALSE, warning=FALSE, eval=FALSE}
to_table(r, digits=2)
```
```{r echo=FALSE, message=FALSE, warning=FALSE}
knitr::kable(to_table(r, digits=2))
```


